How can we build our own Docker image?
But first let's answer the question when do we need to do this?
The problem with our current setup, If we're taking a look at the deploy staging or deploy production 
stages. We need to install netlify cli and jq. With every execution, this is taking a bit of time 
because we need to download netlify cli and node jq, install it locally and then we can use it. 
However, we could build our own Docker image that has Netlify CLI and node JK in advance.


So how can we do that?
In order to create a custom Docker file, we need to specify how we want that image to be built, and for 
that we're going to define here a new file which is called "Dockerfile" at the root foder of the 
project.

Docker file is just a text document that contains instructions for building a Docker image. You can 
think of it like a recipe, which tells Docker exactly what needs to be done step by step. On the first 
and probably most important instruction in a Dockerfile is the base image.

Essentially, we never start from scratch. We start from an existing image and we add something to that 
image. In our case, we want to use the image "mcr.microsoft.com/playwright:v1.39.0-jammy", which has 
worked out pretty well. And to this image we want to add this additional tools that are missing.
So in the Docker file in capital letters we're going to write FROM and then we're gonna paste the name of
the image. this stage is starting the Docker image from this existing Docker image.
Then, on top of this, we're going to use the command RUN. And what we want to do is run the commands to
install the rest (in our example "npm install -g netlify-cli node-jq serve").

Now, inside the pipeline we need to build this image. So we need to happen somewhere very soon before this 
image is being used. we need to define a new stage which is called Docker. In this stage, we'll have steps.
And inside here we're going to have a shell step. We don't need any Docker image or something like that.
Docker is already available on this Jenkins installation. So we're going to use the Docker build command:
start with "docker build".
And then we need to specify a name for this image. Essentially we need to tag it and provide an identifier.
This is done by passing here the flag "-t" and the name. for example call this "my-playwright".
And after that we have to add a dot and a dot ('.' - in Linux means here in this current directory).
this is the result:
"docker build -t my-plawright ."