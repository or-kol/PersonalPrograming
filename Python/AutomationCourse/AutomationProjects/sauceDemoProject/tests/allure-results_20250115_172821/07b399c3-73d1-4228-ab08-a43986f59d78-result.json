{"name": "Invalid input in checkout", "status": "failed", "statusDetails": {"message": "AssertionError: Actual result = 'No error', expected = 'Error: First Name is required'\nassert 'No error' == 'Error: First...e is required'\n  \n  - Error: First Name is required\n  + No error", "trace": "self = <tests.test_checkout_page.TestCheckoutPage object at 0x000002BBC316CE30>, first_name = '11111', last_name = 'Martinez', zip = '94103', login_fixture = <pages.prod_list_page.ProductsList object at 0x000002BBC32082F0>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.description(\"Logging in, adding product to cart, going to cart, go to checkout, adding invalid information\"\n                        \"continue to overview page. Then logging out\")\n    @allure.title(\"Invalid input in checkout\")\n    @allure.story(\"Filling invalid information in checkout\")\n    @pytest.mark.parametrize(\"first_name, last_name, zip\", invalid_checkout_info)\n    def test_fill_checkout_info_missing_info(self, first_name, last_name, zip, login_fixture):\n        first_name = ConfigReader.read_config(\"invalid_checkout_data\", first_name)\n        last_name = ConfigReader.read_config(\"invalid_checkout_data\", last_name)\n        zip = ConfigReader.read_config(\"invalid_checkout_data\", zip)\n    \n        prod_list_page = login_fixture\n        prod_list_page.quick_add_item_to_cart(ConfigReader.read_config(\"products_list\", \"Sauce_Labs_Bolt_T-Shirt_position\"))\n    \n        checkout_page = self.get_to_checkout_page(prod_list_page)\n        checkout_page.fill_info(first_name, last_name, zip)\n        expected_result = \"\"\n        if first_name == \"\" or first_name.isnumeric():\n                expected_result = \"Error: First Name is required\"\n        elif last_name == \"\" or last_name.isnumeric():\n                expected_result = \"Error: Last Name is required\"\n        elif zip == \"\" or zip.isalpha():\n                expected_result = \"Error: Postal Code is required\"\n    \n        try:\n            actual_result = checkout_page.get_checkout_error_msg()\n        except Exception as e:\n            print(e)\n            actual_result = \"No error\"\n    \n>       assert actual_result == expected_result, f\"Actual result = '{actual_result}', expected = '{expected_result}'\"\nE       AssertionError: Actual result = 'No error', expected = 'Error: First Name is required'\nE       assert 'No error' == 'Error: First...e is required'\nE         \nE         - Error: First Name is required\nE         + No error\n\ntest_checkout_page.py:85: AssertionError"}, "description": "Logging in, adding product to cart, going to cart, go to checkout, adding invalid informationcontinue to overview page. Then logging out", "steps": [{"name": "Add product to cart from products list page (product number in DB is : '3')", "status": "passed", "parameters": [{"name": "prod", "value": "'3'"}], "start": 1736955215113, "stop": 1736955215280}, {"name": "Go to cart", "status": "passed", "start": 1736955215280, "stop": 1736955215416}, {"name": "Go to checkout page", "status": "passed", "start": 1736955215416, "stop": 1736955215578}, {"name": "Checkout information: first name: '11111', last name: 'Martinez', zip: '94103'", "status": "passed", "parameters": [{"name": "first_name", "value": "'11111'"}, {"name": "last_name", "value": "'Martinez'"}, {"name": "zip_code", "value": "'94103'"}], "start": 1736955215578, "stop": 1736955216607}, {"name": "Get checkout page error message", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF67B0280D5+2992373]\n\t(No symbol) [0x00007FF67ACBBFD0]\n\t(No symbol) [0x00007FF67AB5590A]\n\t(No symbol) [0x00007FF67ABA926E]\n\t(No symbol) [0x00007FF67ABA955C]\n\t(No symbol) [0x00007FF67ABF27D7]\n\t(No symbol) [0x00007FF67ABCF3AF]\n\t(No symbol) [0x00007FF67ABEF584]\n\t(No symbol) [0x00007FF67ABCF113]\n\t(No symbol) [0x00007FF67AB9A918]\n\t(No symbol) [0x00007FF67AB9BA81]\n\tGetHandleVerifier [0x00007FF67B086A2D+3379789]\n\tGetHandleVerifier [0x00007FF67B09C32D+3468109]\n\tGetHandleVerifier [0x00007FF67B090043+3418211]\n\tGetHandleVerifier [0x00007FF67AE1C78B+847787]\n\t(No symbol) [0x00007FF67ACC757F]\n\t(No symbol) [0x00007FF67ACC2FC4]\n\t(No symbol) [0x00007FF67ACC315D]\n\t(No symbol) [0x00007FF67ACB2979]\n\tBaseThreadInitThunk [0x00007FFFF665E8D7+23]\n\tRtlUserThreadStart [0x00007FFFF7D3FBCC+44]\n\n", "trace": "  File \"D:\\PersonalPrograming\\Python\\AutomationCourse\\AutomationProjects\\sauceDemoProject\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\PersonalPrograming\\Python\\AutomationCourse\\AutomationProjects\\sauceDemoProject\\pages\\checkout_page.py\", line 27, in get_checkout_error_msg\n    return self.get_text(Locators.CHECKOUT_ERROR_MSG)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\PersonalPrograming\\Python\\AutomationCourse\\AutomationProjects\\sauceDemoProject\\pages\\base_page.py\", line 52, in get_text\n    WebDriverWait(self.driver, self.TIMEOUT).until(EC.presence_of_element_located(locator))\n  File \"D:\\PersonalPrograming\\Python\\AutomationCourse\\AutomationProjects\\sauceDemoProject\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1736955216608, "stop": 1736955227011}], "attachments": [{"name": "screenshot", "source": "42729c66-461e-48cc-acdc-833498e70730-attachment.png", "type": "image/png"}, {"name": "log", "source": "9ae1459e-3e9d-45e8-b20b-7e37e7d9e879-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "d4b8cd2c-773e-4136-8ee7-d1f6b1579d33-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "a359a2e3-981c-4650-9379-ae8b7596d227-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "first_name", "value": "'first_name4'"}, {"name": "last_name", "value": "'last_name4'"}, {"name": "zip", "value": "'zip4'"}], "start": 1736955215108, "stop": 1736955227084, "uuid": "e0d42604-32a6-47bd-9244-a43474aa708c", "historyId": "df042b13ad395a25df73cbebca398af2", "testCaseId": "bf37484fafbb53c77c705686a193b5d5", "fullName": "test_checkout_page.TestCheckoutPage#test_fill_checkout_info_missing_info", "labels": [{"name": "story", "value": "Filling invalid information in checkout"}, {"name": "epic", "value": "Purchase"}, {"name": "feature", "value": "Checkout"}, {"name": "severity", "value": "normal"}, {"name": "suite", "value": "test_checkout_page"}, {"name": "subSuite", "value": "TestCheckoutPage"}, {"name": "host", "value": "DESKTOP-52FQS7R"}, {"name": "thread", "value": "45372-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_checkout_page"}]}